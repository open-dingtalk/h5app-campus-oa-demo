{"version":3,"sources":["components/Work.js","components/Classes.js","components/Courses.js","App.js","reportWebVitals.js","index.js"],"names":["Work","props","Form","useForm","form","useEffect","setFieldsValue","title","url","createTime","formTitle","formContent","usernamelist","i","users","length","push","name","showType","className","join","onFinish","data","onClick","Item","label","placeholder","htmlType","type","Classes","TextArea","Input","teachers","map","item","value","userid","onChange","addUser","text","rows","showWork","Courses","Group","chooseMy","myCourses","e","courseCode","startTime","endTime","teacherName","chooseOther","otherCourses","App","state","domain","corpId","authCode","userId","userName","deptList","deptId","adjustCourse","myCourseCode","otherCourseCode","classId","bizId","finish","sendMessage","teacherList","time","origin","displayType","this","setState","msg","id","target","console","log","JSON","stringify","window","location","axios","post","headers","then","res","message","success","catch","error","alert","param","arr","split","indexOf","login","body","search","getBizId","status","finishWork","deptOptions","chooseDept","deptType","setText","sendMsg","newWorkRecord","adjust","get","courseList","ids","getClassUserList","getDeptList","result","details","loginAction","_this","dd","permission","requestAuthCode","onSuccess","code","setTimeout","onFail","err","React","Component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.b46141a1.chunk.js","sourcesContent":["import react, { useEffect } from \"react\"\nimport { Form, Input, Button } from \"antd\"\n\nconst Work = (props) => {\n  const [form] = Form.useForm()\n  useEffect(() => {\n    form.setFieldsValue({\n      title: \"任务待办\",\n      url: \"/toWork\",\n      createTime: \"2021-07-05 16:00:00\",\n      formTitle: \"标题\",\n      formContent: \"内容\",\n    })\n  }, [])\n\n  const onSubmit = (data) => {\n    props.onClick(data)\n  }\n  let usernamelist = []\n  for (let i = 0; i < props.users.length; i++) {\n    usernamelist.push(props.users[i].name)\n  }\n  if (props.showType === 2) {\n    return (\n      <div>\n        <h4 className=\"title\">创建任务</h4>\n        <text className=\"littleTitle\">代办人：{usernamelist.join(\",\")}</text>\n        <Form form={form} onFinish={onSubmit}>\n          <Form.Item label=\"任务标题\" name=\"title\">\n            <Input placeholder=\"请输入标题\" />\n          </Form.Item>\n          <Form.Item label=\"任务链接\" name=\"url\">\n            <Input placeholder=\"请输入任务链接\" />\n          </Form.Item>\n          <Form.Item label=\"待办时间\" name=\"createTime\">\n            <Input placeholder=\"输入格式：yyyy-MM-dd hh:mm:ss\" />\n          </Form.Item>\n          <Form.Item label=\"小标题\" name=\"formTitle\">\n            <Input placeholder=\"请输入小标题\" />\n          </Form.Item>\n          <Form.Item label=\"学习内容\" name=\"formContent\">\n            <Input placeholder=\"请输入学习内容\" />\n          </Form.Item>\n          <Button htmlType=\"submit\" type=\"primary\">\n            提交\n          </Button>\n        </Form>\n        {/* <div className=\"page-section\">\n          <div className=\"form-row\">\n            <div className=\"form-row-label\">任务标题</div>\n            <div className=\"form-row-content\">\n              <input\n                name=\"title\"\n                className=\"input\"\n                placeholder=\"输入标题\"\n                value={props.form.title}\n                onChange={props.onChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-line\" />\n          <div className=\"form-row\">\n            <div className=\"form-row-label\">任务链接</div>\n            <div className=\"form-row-content\">\n              <input\n                name=\"url\"\n                className=\"input\"\n                placeholder=\"输入任务链接\"\n                value={props.toWorkUrl}\n                onChange={props.onChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-line\" />\n          <div className=\"form-row\">\n            <div className=\"form-row-label\">待办时间</div>\n            <div className=\"form-row-content\">\n              <input\n                name=\"createTime\"\n                className=\"input\"\n                placeholder=\"输入格式：yyyy-MM-dd hh:mm:ss\"\n                type=\"datetime\"\n                value={props.form.createTime}\n                onChange={props.onChange}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"page-section\">\n          <div className=\"form-row\">\n            <div className=\"form-row-label\">小标题</div>\n            <div className=\"form-row-content\">\n              <input\n                name=\"formTitle\"\n                className=\"input\"\n                placeholder=\"输入小标题\"\n                value={props.form.formTitle}\n                onChange={props.onChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-line\" />\n          <div className=\"form-row\">\n            <div className=\"form-row-label\">任务内容</div>\n            <div className=\"form-row-content\">\n              <input\n                name=\"formContent\"\n                className=\"input\"\n                placeholder=\"任务内容\"\n                value={props.form.formContent}\n                onChange={props.onChange}\n              />\n            </div>\n          </div>\n        </div>\n        <div>\n          <button type=\"button\" onClick={props.onClick}>\n            创建\n          </button>\n        </div> */}\n      </div>\n    )\n  }\n  return <div></div>\n}\n\nexport default Work\n","import react from \"react\"\nimport { Checkbox, Button ,Input} from \"antd\"\n\nconst Classes = (props) => {\n  const { TextArea } = Input\n  if (props.showType === 1) {\n    return (\n      <div>\n        <h3 className=\"title\">{props.className}</h3>\n        <h4 className=\"littleTitle\">老师列表</h4>\n        {props.teachers.map((item, i) => (\n          <div key={\"teacher\" + i}>\n            <Checkbox\n              value={item.userid}\n              name={item.name}\n              onChange={props.addUser}\n            >\n              {item.name}\n            </Checkbox>\n            {/* <span>{item.name}</span> */}\n          </div>\n        ))}\n        <p>\n          输入通知内容：\n          <TextArea value={props.text} onChange={props.onChange} rows={4} />\n        </p>\n        <p>\n          <Button type=\"primary\" onClick={props.onClick}>\n            发送通知\n          </Button>\n        </p>\n        <p onClick={props.showWork}>\n          <a className=\"AppLink\">创建待办</a>\n        </p>\n      </div>\n    )\n  } else {\n    return <div></div>\n  }\n}\nexport default Classes\n","import react from \"react\"\nimport { Button, Input, Radio } from \"antd\"\n\nconst Courses = (props) => {\n  return (\n    <div>\n      <div>\n        <p className=\"littleTitle\">我的课程</p>\n        <div>\n          <Radio.Group onChange={props.chooseMy}>\n            {props.myCourses.map((e, i) => (\n              <div key={\"my\" + i} className=\"radioList\">\n                <Radio\n                  name=\"myCourse\"\n                  value={e.courseCode}\n                  onChange={props.chooseMy}\n                >\n                  <span>课程名称：{e.name}</span>\n                  <br />\n                  <span>上课时间：{e.startTime + \"~\" + e.endTime}</span>\n                  <br />\n                  <span>任课老师：{e.teacherName}</span>\n                  <br />\n                  {/* <input\n              type=\"radio\"\n              name=\"myCourse\"\n              value={e.courseCode}\n              onChange={props.chooseMy}\n            /> */}\n                </Radio>\n              </div>\n            ))}\n          </Radio.Group>\n        </div>\n      </div>\n      <div>\n        <p className=\"littleTitle\">其他老师课程</p>\n        <div>\n          <Radio.Group onChange={props.chooseOther}>\n            {props.otherCourses.map((e, i) => (\n              <div key={\"other\" + i} className=\"radioList\">\n                <Radio\n                  name=\"otherCourse\"\n                  value={e.courseCode}\n                  onChange={props.chooseOther}\n                >\n                  <span>课程名称：{e.name}</span>\n                  <br />\n                  <span>上课时间：{e.startTime + \"~\" + e.endTime}</span>\n                  <br />\n                  <span>任课老师：{e.teacherName}</span>\n                  <br />\n                  {/* <Input\n                  type=\"radio\"\n                  name=\"otherCourse\"\n                  value={e.courseCode}\n                  onChange={props.chooseOther}\n                /> */}\n                </Radio>\n              </div>\n            ))}\n          </Radio.Group>\n        </div>\n      </div>\n      <p>\n        <Button type=\"primary\" onClick={props.onClick}>\n          申请换课\n        </Button>\n      </p>\n    </div>\n  )\n}\n\nexport default Courses\n","import * as dd from \"dingtalk-jsapi\"\nimport axios from \"axios\"\nimport React from \"react\"\nimport \"./App.css\"\nimport { message } from \"antd\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport Work from \"./components/Work\"\nimport Classes from \"./components/Classes\"\nimport Courses from \"./components/Courses\"\nimport \"antd/dist/antd.min.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      //内网穿透工具介绍:\n      // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n      // 替换成后端服务域名\n      domain: \"\",\n      corpId: \"\",\n      authCode: \"\",\n      userId: \"\",\n      userName: \"\",\n      deptList: [],\n      deptId: 0,\n      teachers: [],\n      myCourses: [\n        {\n          name: 1111,\n          startTime: \"22222\",\n          endTime: \"33333\",\n          teacherName: \"4444\",\n          courseCode: \"5555\",\n        },\n        {\n          name: 333,\n          startTime: \"444\",\n          endTime: \"555\",\n          teacherName: \"999\",\n          courseCode: \"5500055\",\n        },\n      ],\n      otherCourses: [\n        {\n          name: 1111,\n          startTime: \"22222\",\n          endTime: \"33333\",\n          teacherName: \"4444\",\n          courseCode: \"6665\",\n        },\n      ],\n      adjustCourse: {\n        myCourseCode: \"\",\n        otherCourseCode: \"\",\n      },\n      showType: 0,\n      className: \"\",\n      classId: \"\",\n      bizId: \"\",\n      finish: false,\n      sendMessage: {\n        teacherList: [],\n        title: \"通知\",\n        text: \"\",\n        time: \"\",\n      },\n      //   form: {\n      //     title: \"任务待办\",\n      //     url: \"/toWork\",\n      //     createTime: \"2021-07-05 16:00:00\",\n      //     formTitle: \"标题\",\n      //     formContent: \"内容\",\n      //   },\n      //   toWorkUrl: \"\",\n      origin: \"\",\n      displayType: 0,\n    }\n  }\n  showWork(e) {\n    this.setState({\n      showType: 2,\n    })\n  }\n  addUser(e) {\n    let msg = this.state.sendMessage\n    msg.teacherList.push({\n      id: e.target.value,\n      name: e.target.name,\n    })\n    this.setState({\n      sendMessage: msg,\n    })\n    console.log(JSON.stringify(this.state.sendMessage))\n  }\n  setText(e) {\n    let msg = this.state.sendMessage\n    msg.text = e.target.value\n    this.setState({\n      sendMessage: msg,\n    })\n  }\n  sendMsg(e) {\n    let msg = this.state.sendMessage\n    msg.classId = this.state.classId\n    this.setState({\n      sendMessage: msg,\n    })\n    let data = this.state.sendMessage\n    data.origin = window.location.origin\n    axios\n      .post(this.state.domain + \"/campus/sendMsg\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        message.success(\"通知已发出！\")\n      })\n      .catch((error) => {\n        alert(\"tongzhi err \" + JSON.stringify(error))\n      })\n  }\n  getBizId(param) {\n    if (param) {\n      let arr = param.split(\"=\")\n      if (arr) {\n        if (arr[0].indexOf(\"?bizId\") !== -1) {\n          this.setState({\n            bizId: arr[1],\n          })\n        }\n      }\n    } else {\n      alert(\"param error!!!\", param)\n    }\n  }\n  finishWork() {\n    if (this.state.finish) {\n      message.success(\"已完成\")\n      return\n    }\n    axios\n      .post(\n        this.state.domain + \"/campus/updateWork\",\n        {\n          userId: this.state.userId,\n          bizId: this.state.bizId,\n        },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((res) => {\n        alert(\"完成任务\")\n        this.setState({\n          finish: true,\n        })\n      })\n      .catch((error) => {\n        alert(JSON.stringify(error))\n      })\n  }\n\n  render() {\n    // if (this.state.toWorkUrl === \"\") {\n    //   let origin = window.location.origin\n    //   let toWorkUrl = origin + this.state.form.url\n    //   this.setState({\n    //     toWorkUrl: toWorkUrl,\n    //   })\n    // }\n    if (this.state.userId === \"\") {\n      this.login()\n    }\n    let param = this.props.location.search\n    if (param) {\n      if (this.state.bizId === \"\") {\n        this.getBizId(param)\n      }\n      let status = this.state.finish ? (\n        <div>已完成</div>\n      ) : (\n        <div>\n          任务页面。。。\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <button type=\"button\" onClick={() => this.finishWork()}>\n            完成任务\n          </button>\n        </div>\n      )\n      return <div>{status}</div>\n    } else {\n      let body\n      if (this.state.displayType === 0) {\n        body = (\n          <div>\n            <a onClick={(e) => this.displayType(e, 1)} className=\"AppLink\">\n              发送通知/待办\n            </a>\n            <a onClick={(e) => this.displayType(e, 2)} className=\"AppLink\">\n              调换课\n            </a>\n          </div>\n        )\n      } else if (this.state.displayType === 1) {\n        let deptOptions\n        if (this.state.showType === 0) {\n          deptOptions = (\n            <div>\n              <h3 className=\"title\">选择部门：</h3>\n              {this.state.deptList.map((item, i) => (\n                <div key={i}>\n                  <p>\n                    <a className=\"AppLink\">\n                      <span\n                        onClick={(e) =>\n                          this.chooseDept(\n                            e,\n                            item.deptId,\n                            item.deptType,\n                            item.name\n                          )\n                        }\n                      >\n                        {item.name}\n                      </span>\n                    </a>\n                  </p>\n                </div>\n              ))}\n            </div>\n          )\n        } else {\n          deptOptions = <div></div>\n        }\n        body = (\n          <div>\n            {deptOptions}\n            <Classes\n              showType={this.state.showType}\n              teachers={this.state.teachers}\n              className={this.state.className}\n              addUser={(e) => this.addUser(e)}\n              onChange={(e) => this.setText(e)}\n              text={this.state.sendMessage.text}\n              onClick={(e) => this.sendMsg(e)}\n              showWork={(e) => this.showWork(e)}\n            />\n            <Work\n              showType={this.state.showType}\n              users={this.state.sendMessage.teacherList}\n              //   form={this.state.form}\n              //   onChange={(e) => this.updateFormData(e)}\n              onClick={(e) => this.newWorkRecord(e)}\n              //   toWorkUrl={this.state.toWorkUrl}\n            />\n          </div>\n        )\n      } else if (this.state.displayType === 2) {\n        body = (\n          <div>\n            <Courses\n              myCourses={this.state.myCourses}\n              otherCourses={this.state.otherCourses}\n              chooseMy={(e) => this.chooseMy(e)}\n              chooseOther={(e) => this.chooseOther(e)}\n              onClick={() => this.adjust()}\n            />\n          </div>\n        )\n      }\n      return <div className=\"App\">{body}</div>\n    }\n  }\n  adjust() {\n    let data = this.state.adjustCourse\n    data.origin = window.location.origin\n    axios\n      .post(this.state.domain + \"/campus/adjust\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        message.success(\"调课申请已发出，请留意通知消息!\")\n        // alert(\"classUserList --- \" + JSON.stringify(this.state.students))\n      })\n      .catch((error) => {\n        alert(\"adjust err \" + JSON.stringify(error))\n      })\n  }\n  chooseOther(e) {\n    let value = e.target.value\n    let adjustCourse = this.state.adjustCourse\n    adjustCourse.otherCourseCode = value\n    this.setState({\n      adjustCourse: adjustCourse,\n    })\n  }\n  chooseMy(e) {\n    let value = e.target.value\n    let adjustCourse = this.state.adjustCourse\n    adjustCourse.myCourseCode = value\n    this.setState({\n      adjustCourse: adjustCourse,\n    })\n  }\n  courseList() {\n    axios\n      .get(this.state.domain + \"/campus/courseList?userid=\" + this.state.userId)\n      .then((res) => {\n        this.setState({\n          myCourses: res.data.data.myCourses,\n          otherCourses: res.data.data.otherCourses,\n          displayType: 2,\n        })\n      })\n      .catch((error) => {\n        alert(\"courseList err \" + JSON.stringify(error))\n      })\n  }\n  displayType(e, type) {\n    if (type === 2) {\n      this.courseList()\n    } else {\n      this.setState({\n        displayType: type,\n      })\n    }\n  }\n  newWorkRecord(data) {\n    let ids = []\n    for (let i = 0; i < this.state.sendMessage.teacherList.length; i++) {\n      ids.push(this.state.sendMessage.teacherList[i].id)\n    }\n    data.ids = ids\n    data.url = window.location.origin + data.url\n    data.origin = window.location.origin\n    axios\n      .post(this.state.domain + \"/campus/newWork\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          message.success(\"创建任务待办成功！\")\n        } else {\n          message.error(\"创建任务待办失败！\")\n        }\n        this.setState({\n          showType: 1,\n        })\n      })\n      .catch((error) => {\n        alert(JSON.stringify(error))\n      })\n  }\n  //   updateFormData(e) {\n  //     let form = this.state.form\n  //     switch (e.target.name) {\n  //       case \"title\":\n  //         form.title = e.target.value\n  //         this.setState({ form: form })\n  //         break\n  //       case \"url\":\n  //         let toWorkUrl = e.target.value\n  //         this.setState({ toWorkUrl: toWorkUrl })\n  //         break\n  //       case \"createTime\":\n  //         form.createTime = e.target.value\n  //         this.setState({ form: form })\n  //         break\n  //       case \"formTitle\":\n  //         form.formTitle = e.target.value\n  //         this.setState({ form: form })\n  //         break\n  //       case \"formContent\":\n  //         form.formContent = e.target.value\n  //         this.setState({ form: form })\n  //         break\n  //     }\n  //   }\n  chooseDept(e, deptId, deptType, name) {\n    console.log(\"chooseDept deptId : \" + deptId)\n    if (deptType === \"class\") {\n      this.setState({\n        classId: deptId,\n        className: name,\n      })\n      this.getClassUserList(deptId)\n    } else {\n      this.setState({\n        deptId: deptId,\n      })\n      this.getDeptList(deptId)\n    }\n  }\n  getClassUserList(classId) {\n    axios\n      .get(this.state.domain + \"/campus/classUserList?classId=\" + classId)\n      .then((res) => {\n        this.setState({\n          teachers: res.data.data.result.details,\n          showType: 1,\n        })\n      })\n      .catch((error) => {\n        alert(\"class err \" + JSON.stringify(error))\n      })\n  }\n  getDeptList(deptId) {\n    axios\n      .get(this.state.domain + \"/campus/deptList?deptId=\" + deptId)\n      .then((res) => {\n        this.setState({\n          deptList: res.data.data.result.details,\n          showType: 0,\n        })\n      })\n      .catch((error) => {\n        alert(\"dept err \" + JSON.stringify(error))\n      })\n  }\n\n  login() {\n    axios\n      .get(this.state.domain + \"/getCorpId\")\n      .then((res) => {\n        if (res.data) {\n          this.loginAction(res.data)\n        }\n      })\n      .catch((error) => {\n        alert(\"corpId err, \" + JSON.stringify(error))\n      })\n  }\n  loginAction(corpId) {\n    let _this = this\n    dd.runtime.permission.requestAuthCode({\n      corpId: corpId, //企业 corpId\n      onSuccess: function (res) {\n        // 调用成功时回调\n        _this.state.authCode = res.code\n        axios\n          .get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode)\n          .then((res) => {\n            if (res && res.data.success) {\n              let userId = res.data.data.userId\n              let userName = res.data.data.userName\n              message.success(\"登录成功，你好:\" + userName)\n              setTimeout(function () {\n                _this.setState({\n                  userId: userId,\n                  userName: userName,\n                })\n              }, 0)\n              _this.getDeptList(0)\n            } else {\n              alert(\"login failed --->\" + JSON.stringify(res))\n            }\n          })\n          .catch((error) => {\n            alert(\"httpRequest failed --->\" + JSON.stringify(error))\n          })\n      },\n      onFail: function (err) {\n        // 调用失败时回调\n        alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n      },\n    })\n  }\n}\n\nexport default withRouter(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Route path={`/`} component={App}></Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}